// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: tickets.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// next id: 4
type TicketChannelInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketChannelInfo) Reset() {
	*x = TicketChannelInfo{}
	mi := &file_tickets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketChannelInfo) ProtoMessage() {}

func (x *TicketChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketChannelInfo.ProtoReflect.Descriptor instead.
func (*TicketChannelInfo) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{0}
}

func (x *TicketChannelInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TicketChannelInfo) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *TicketChannelInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

// next id: 2
type TicketClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketClientInfo) Reset() {
	*x = TicketClientInfo{}
	mi := &file_tickets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketClientInfo) ProtoMessage() {}

func (x *TicketClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketClientInfo.ProtoReflect.Descriptor instead.
func (*TicketClientInfo) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{1}
}

func (x *TicketClientInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// next id: 5
type TicketMessageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	GuildId       string                 `protobuf:"bytes,2,opt,name=guildId,proto3" json:"guildId,omitempty"`
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channelId,proto3" json:"channelId,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketMessageInfo) Reset() {
	*x = TicketMessageInfo{}
	mi := &file_tickets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketMessageInfo) ProtoMessage() {}

func (x *TicketMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketMessageInfo.ProtoReflect.Descriptor instead.
func (*TicketMessageInfo) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{2}
}

func (x *TicketMessageInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *TicketMessageInfo) GetGuildId() string {
	if x != nil {
		return x.GuildId
	}
	return ""
}

func (x *TicketMessageInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TicketMessageInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateListenerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateListenerResponse) Reset() {
	*x = CreateListenerResponse{}
	mi := &file_tickets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateListenerResponse) ProtoMessage() {}

func (x *CreateListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateListenerResponse.ProtoReflect.Descriptor instead.
func (*CreateListenerResponse) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{3}
}

type CreateMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMessageResponse) Reset() {
	*x = CreateMessageResponse{}
	mi := &file_tickets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMessageResponse) ProtoMessage() {}

func (x *CreateMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateMessageResponse) Descriptor() ([]byte, []int) {
	return file_tickets_proto_rawDescGZIP(), []int{4}
}

var File_tickets_proto protoreflect.FileDescriptor

const file_tickets_proto_rawDesc = "" +
	"\n" +
	"\rtickets.proto\"g\n" +
	"\x11TicketChannelInfo\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x18\n" +
	"\aguildId\x18\x02 \x01(\tR\aguildId\x12\x1c\n" +
	"\tchannelId\x18\x03 \x01(\tR\tchannelId\".\n" +
	"\x10TicketClientInfo\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\"\x81\x01\n" +
	"\x11TicketMessageInfo\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x18\n" +
	"\aguildId\x18\x02 \x01(\tR\aguildId\x12\x1c\n" +
	"\tchannelId\x18\x03 \x01(\tR\tchannelId\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x18\n" +
	"\x16CreateListenerResponse\"\x17\n" +
	"\x15CreateMessageResponse2\xb5\x02\n" +
	"\rTicketService\x12J\n" +
	"\x1bTicketServiceCreateListener\x12\x12.TicketChannelInfo\x1a\x17.CreateListenerResponse\x12F\n" +
	"\x1bTicketServiceFetchListeners\x12\x11.TicketClientInfo\x1a\x12.TicketChannelInfo0\x01\x12H\n" +
	"\x1aTicketServiceCreateMessage\x12\x12.TicketMessageInfo\x1a\x16.CreateMessageResponse\x12F\n" +
	"\x1aTicketServiceFetchMessages\x12\x12.TicketChannelInfo\x1a\x12.TicketMessageInfo0\x01B\x13Z\x11paintbrush/protosb\x06proto3"

var (
	file_tickets_proto_rawDescOnce sync.Once
	file_tickets_proto_rawDescData []byte
)

func file_tickets_proto_rawDescGZIP() []byte {
	file_tickets_proto_rawDescOnce.Do(func() {
		file_tickets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tickets_proto_rawDesc), len(file_tickets_proto_rawDesc)))
	})
	return file_tickets_proto_rawDescData
}

var file_tickets_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tickets_proto_goTypes = []any{
	(*TicketChannelInfo)(nil),      // 0: TicketChannelInfo
	(*TicketClientInfo)(nil),       // 1: TicketClientInfo
	(*TicketMessageInfo)(nil),      // 2: TicketMessageInfo
	(*CreateListenerResponse)(nil), // 3: CreateListenerResponse
	(*CreateMessageResponse)(nil),  // 4: CreateMessageResponse
}
var file_tickets_proto_depIdxs = []int32{
	0, // 0: TicketService.TicketServiceCreateListener:input_type -> TicketChannelInfo
	1, // 1: TicketService.TicketServiceFetchListeners:input_type -> TicketClientInfo
	2, // 2: TicketService.TicketServiceCreateMessage:input_type -> TicketMessageInfo
	0, // 3: TicketService.TicketServiceFetchMessages:input_type -> TicketChannelInfo
	3, // 4: TicketService.TicketServiceCreateListener:output_type -> CreateListenerResponse
	0, // 5: TicketService.TicketServiceFetchListeners:output_type -> TicketChannelInfo
	4, // 6: TicketService.TicketServiceCreateMessage:output_type -> CreateMessageResponse
	2, // 7: TicketService.TicketServiceFetchMessages:output_type -> TicketMessageInfo
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tickets_proto_init() }
func file_tickets_proto_init() {
	if File_tickets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tickets_proto_rawDesc), len(file_tickets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tickets_proto_goTypes,
		DependencyIndexes: file_tickets_proto_depIdxs,
		MessageInfos:      file_tickets_proto_msgTypes,
	}.Build()
	File_tickets_proto = out.File
	file_tickets_proto_goTypes = nil
	file_tickets_proto_depIdxs = nil
}
